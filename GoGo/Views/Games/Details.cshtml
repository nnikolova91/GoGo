@using Microsoft.AspNetCore.Identity
@model ViewModels.GameDetailsViewModel
@inject UserManager<GoUser> UserManager
@{
    ViewData["Title"] = "Create";
}

<main class="mt-3">

    <div class="card" @*style="width: 18rem;" *@>
        <div class="card-body">
            <h5 class="card-title">@Model.Name</h5>
            <h6 class="card-subtitle mb-2 text-muted">@Model.Creator</h6>
            <p class="card-text">@Model.Description</p>
        </div>
    </div>



    <div class="card-deck">
        <div class="card" style="width: 18rem;">
            <ul class="list-group list-group-flush">
                <li class="list-group-item">Level 1</li>
            </ul>
            <ul class="list-group list-group-flush">
                <li>
                    @{ var base61 = Convert.ToBase64String(@Model.Level1.Image);
                        var imgSr = String.Format("data:image/gif;base64,{0}", base61);
                        <img class="card-img-top img-thumbnail " src="@imgSr" /> }
                </li>
            </ul>
            <div class="card-body">
                <h5 class="card-title">Points: @Model.Level1.Points</h5>
                <p class="card-text">@Model.Level1.Description</p>
            </div>
            <div class="card-body" enctype="multipart/form-data">
                <form method="post" asp-action="AddImage" asp-controller="Games" asp-route-id="@Model.Id" asp-route-levelId="@Model.Level1.Id" enctype="multipart/form-data">
                    <div class="form-group card-img-top img-thumbnail">
                        <label asp-for="@Model.Level1.CorrespondingImage"></label>
                        <input asp-for="@Model.Level1.CorrespondingImage" type="file" onchange="readURL(this);" />
                        <span asp-validation-for="@Model.Level1.CorrespondingImage" class="text-danger"></span>
                        <img class="card-img-top img-thumbnail " id="blah" src="~/images/imagePlaceholder.png" alt="your image" />
                    </div>
                    <button type="submit">AddImage</button>
                </form>
            </div>
            <div class="dropdown" style="float:left;">
                <button class="dropbtn">All images</button>
                <div class="dropdown-content" style="left:0;">
                    @if (Model.GameParticipantsLevel1.Count() > 0)
                    {
                        @foreach (var item in Model.GameParticipantsLevel1)
                        {
                            await Html.RenderPartialAsync("_GameParticipantsLevel", item);
                        }
                    }
                </div>
            </div>
        </div>
        <div class="card" style="width: 18rem;">
            <ul class="list-group list-group-flush">
                <li class="list-group-item">Level 2</li>
            </ul>
            <ul class="list-group list-group-flush">
                <li>
                    @{ var base62 = Convert.ToBase64String(@Model.Level2.Image);
                        var imgSrr = String.Format("data:image/gif;base64,{0}", base62);
                        <img class="card-img-top img-thumbnail " src="@imgSrr" /> }
                </li>
            </ul>
            <div class="card-body">
                <h5 class="card-title">Points: @Model.Level2.Points</h5>
                <p class="card-text">@Model.Level2.Description</p>
            </div>
            <div class="card-body" enctype="multipart/form-data">
                <form method="post" asp-action="AddImage" asp-controller="Games" asp-route-id="@Model.Id" asp-route-levelId="@Model.Level2.Id" enctype="multipart/form-data">
                    <div class="form-group card-img-top img-thumbnail">
                        <label asp-for="@Model.Level2.CorrespondingImage"></label>
                        <input asp-for="@Model.Level2.CorrespondingImage" type="file" onchange="readURL(this);" />
                        <span asp-validation-for="@Model.Level2.CorrespondingImage" class="text-danger"></span>
                        <img class="card-img-top img-thumbnail " id="blah" src="~/images/imagePlaceholder.png" alt="your image" />
                    </div>
                    <button type="submit">AddImage</button>
                </form>
            </div>
            <div class="dropdown" style="float:left;">
                <button class="dropbtn">All images</button>
                <div class="dropdown-content" style="left:0;">
                    @if (Model.GameParticipantsLevel2.Count() > 0)
                    {
                        @foreach (var item in Model.GameParticipantsLevel2)
                        {
                            await Html.RenderPartialAsync("_GameParticipantsLevel", item);
                        }
                    }
                </div>
            </div>
        </div>
        <div class="card" style="width: 18rem;">
            <ul class="list-group list-group-flush">
                <li class="list-group-item">Level 3</li>
            </ul>
            <ul class="list-group list-group-flush">
                <li>
                    @{ var base63 = Convert.ToBase64String(@Model.Level3.Image);
                        var imgSrrr = String.Format("data:image/gif;base64,{0}", base63);
                        <img class="card-img-top img-thumbnail " src="@imgSrrr" /> }
                </li>
            </ul>
            <div class="card-body">
                <h5 class="card-title">Points: @Model.Level3.Points</h5>
                <p class="card-text">@Model.Level3.Description</p>
            </div>
            <div class="card-body" enctype="multipart/form-data">
                <form method="post" asp-action="AddImage" asp-controller="Games" asp-route-id="@Model.Id" asp-route-levelId="@Model.Level3.Id" enctype="multipart/form-data">
                    <div class="form-group card-img-top img-thumbnail">
                        <label asp-for="@Model.Level3.CorrespondingImage"></label>
                        <input asp-for="@Model.Level3.CorrespondingImage" type="file" onchange="readURL(this);" />
                        <span asp-validation-for="@Model.Level3.CorrespondingImage" class="text-danger"></span>
                        <img class="card-img-top img-thumbnail " id="blah" src="~/images/imagePlaceholder.png" alt="your image" />
                    </div>
                    <button type="submit">AddImage</button>
                </form>
            </div>
            <div class="dropdown" style="float:left;">
                <button class="dropbtn">All images</button>
                <div class="dropdown-content" style="left:0;">
                    @if (Model.GameParticipantsLevel3.Count() > 0)
                    {
                        @foreach (var item in Model.GameParticipantsLevel3)
                        {
                            await Html.RenderPartialAsync("_GameParticipantsLevel", item);
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    @{var user = await UserManager.GetUserAsync(this.User);}
    @if (this.User.Identity.IsAuthenticated)
    {
        if (Model.GameParticipantsLevel1.FirstOrDefault(x => x.ParticipantId == user.Id) == null
            && Model.GameParticipantsLevel2.FirstOrDefault(x => x.ParticipantId == user.Id) == null
            && Model.GameParticipantsLevel3.FirstOrDefault(x => x.ParticipantId == user.Id) == null
            && User.IsInRole("User"))
        {
            <form method="post" asp-action="Start" asp-controller="Games" asp-route-id="@Model.Id">
                <div class="text-center" style="padding-bottom:20px; padding-top:200px;">
                    <button class="btn">Start</button>
                </div>
            </form>
        }
        else if (User.IsInRole("Admin"))
        {
            <h6>:)</h6>
        }
        else
        {
            <h6>You are part from this game</h6>
        }
    }
</main>